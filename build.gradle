plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
}

version = "0.1"
group = "com.mnaut.poc"

repositories {
    mavenCentral()
}


application {
    mainClass.set("com.mnaut.poc.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.mnaut.poc.*")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")


    //LOMBOK (siempre tiene que ir lombok primero)
    implementation('org.projectlombok:lombok:1.18.20')
    testImplementation('org.projectlombok:lombok:1.18.20')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.20')

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-inject")

    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation ("org.apache.commons:commons-lang3:3.11")
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    //Data Base
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("com.vladmihalcea:hibernate-types-52:2.10.1")

//    //LOGGIN
//    runtimeOnly("ch.qos.logback:logback-classic")

    runtimeOnly("org.postgresql:postgresql")
//    testImplementation("org.testcontainers:testcontainers-bom:1.14.3")
    testRuntimeOnly("org.testcontainers:postgresql")
}


